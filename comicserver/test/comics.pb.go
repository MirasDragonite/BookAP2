// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: comics.proto

package test

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author    string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Year      int32  `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	Language  string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Price     int32  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	Quantity  int32  `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Publisher string `protobuf:"bytes,8,opt,name=publisher,proto3" json:"publisher,omitempty"`
}

func (x *Comic) Reset() {
	*x = Comic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comic) ProtoMessage() {}

func (x *Comic) ProtoReflect() protoreflect.Message {
	mi := &file_comics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comic.ProtoReflect.Descriptor instead.
func (*Comic) Descriptor() ([]byte, []int) {
	return file_comics_proto_rawDescGZIP(), []int{0}
}

func (x *Comic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Comic) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Comic) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Comic) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Comic) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Comic) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Comic) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

type CreateComicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comic *Comic `protobuf:"bytes,1,opt,name=comic,proto3" json:"comic,omitempty"`
}

func (x *CreateComicRequest) Reset() {
	*x = CreateComicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComicRequest) ProtoMessage() {}

func (x *CreateComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComicRequest.ProtoReflect.Descriptor instead.
func (*CreateComicRequest) Descriptor() ([]byte, []int) {
	return file_comics_proto_rawDescGZIP(), []int{1}
}

func (x *CreateComicRequest) GetComic() *Comic {
	if x != nil {
		return x.Comic
	}
	return nil
}

type ReadComicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadComicRequest) Reset() {
	*x = ReadComicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadComicRequest) ProtoMessage() {}

func (x *ReadComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadComicRequest.ProtoReflect.Descriptor instead.
func (*ReadComicRequest) Descriptor() ([]byte, []int) {
	return file_comics_proto_rawDescGZIP(), []int{2}
}

func (x *ReadComicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateComicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Comic *Comic `protobuf:"bytes,2,opt,name=comic,proto3" json:"comic,omitempty"`
}

func (x *UpdateComicRequest) Reset() {
	*x = UpdateComicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComicRequest) ProtoMessage() {}

func (x *UpdateComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComicRequest.ProtoReflect.Descriptor instead.
func (*UpdateComicRequest) Descriptor() ([]byte, []int) {
	return file_comics_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateComicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateComicRequest) GetComic() *Comic {
	if x != nil {
		return x.Comic
	}
	return nil
}

type DeleteComicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteComicRequest) Reset() {
	*x = DeleteComicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComicRequest) ProtoMessage() {}

func (x *DeleteComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComicRequest.ProtoReflect.Descriptor instead.
func (*DeleteComicRequest) Descriptor() ([]byte, []int) {
	return file_comics_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteComicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteComicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteComicResponse) Reset() {
	*x = DeleteComicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComicResponse) ProtoMessage() {}

func (x *DeleteComicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComicResponse.ProtoReflect.Descriptor instead.
func (*DeleteComicResponse) Descriptor() ([]byte, []int) {
	return file_comics_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteComicResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_comics_proto protoreflect.FileDescriptor

var file_comics_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x69, 0x63,
	0x52, 0x05, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52,
	0x05, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xda, 0x02,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0c, 0x3a, 0x01, 0x2a, 0x22, 0x07, 0x2f, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x12, 0x4a, 0x0a,
	0x09, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x69, 0x63, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x69, 0x63, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x63, 0x6f,
	0x6d, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x51, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x69, 0x63, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x1a, 0x0c,
	0x2f, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5c, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x2a, 0x0c, 0x2f, 0x63,
	0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comics_proto_rawDescOnce sync.Once
	file_comics_proto_rawDescData = file_comics_proto_rawDesc
)

func file_comics_proto_rawDescGZIP() []byte {
	file_comics_proto_rawDescOnce.Do(func() {
		file_comics_proto_rawDescData = protoimpl.X.CompressGZIP(file_comics_proto_rawDescData)
	})
	return file_comics_proto_rawDescData
}

var file_comics_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_comics_proto_goTypes = []interface{}{
	(*Comic)(nil),               // 0: comics.Comic
	(*CreateComicRequest)(nil),  // 1: comics.CreateComicRequest
	(*ReadComicRequest)(nil),    // 2: comics.ReadComicRequest
	(*UpdateComicRequest)(nil),  // 3: comics.UpdateComicRequest
	(*DeleteComicRequest)(nil),  // 4: comics.DeleteComicRequest
	(*DeleteComicResponse)(nil), // 5: comics.DeleteComicResponse
}
var file_comics_proto_depIdxs = []int32{
	0, // 0: comics.CreateComicRequest.comic:type_name -> comics.Comic
	0, // 1: comics.UpdateComicRequest.comic:type_name -> comics.Comic
	1, // 2: comics.ComicsService.CreateComic:input_type -> comics.CreateComicRequest
	2, // 3: comics.ComicsService.ReadComic:input_type -> comics.ReadComicRequest
	3, // 4: comics.ComicsService.UpdateComic:input_type -> comics.UpdateComicRequest
	4, // 5: comics.ComicsService.DeleteComic:input_type -> comics.DeleteComicRequest
	0, // 6: comics.ComicsService.CreateComic:output_type -> comics.Comic
	0, // 7: comics.ComicsService.ReadComic:output_type -> comics.Comic
	0, // 8: comics.ComicsService.UpdateComic:output_type -> comics.Comic
	5, // 9: comics.ComicsService.DeleteComic:output_type -> comics.DeleteComicResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_comics_proto_init() }
func file_comics_proto_init() {
	if File_comics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadComicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comics_proto_goTypes,
		DependencyIndexes: file_comics_proto_depIdxs,
		MessageInfos:      file_comics_proto_msgTypes,
	}.Build()
	File_comics_proto = out.File
	file_comics_proto_rawDesc = nil
	file_comics_proto_goTypes = nil
	file_comics_proto_depIdxs = nil
}
